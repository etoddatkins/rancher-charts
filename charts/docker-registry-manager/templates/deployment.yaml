apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: docker-registry-manager-config
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: MANAGER_PORT
            value: {{ .Values.service.port | quote }}
          - name: MANAGER_REGISTRIES
            value: {{ .Values.env.manager_registries | quote }}
          - name: MANAGER_LOG_LEVEL
            value: {{ .Values.env.manager_log_level | quote }}
#          - name: MANAGER_ENABLE_HTTPS
#            value: {{ .Values.env.manager_enable_https }}
#          - name: MANAGER_KEY
#            value: {{ .Values.env.manager_key }}
#          - name: MANAGER_CERTIFICATE
#            value: {{ .Values.env.manager_certificate }}
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        livenessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: {{ .Values.service.port }}
          initialDelaySeconds: 15
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            scheme: HTTP
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 3
